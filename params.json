{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"the Groovy enVironment Manager","body":"# GVM the Groovy enVironment Manager\r\n\r\nGVM is a tool for managing parallel Versions of multiple Software Development Kits on most Unix based systems. It provides a convenient command line interface for installing, switching, removing and listing Candidates.\r\n\r\nGVM was inspired by the highly useful [RVM](https://rvm.io) and [rbenv](https://github.com/sstephenson/rbenv) tools, used at large by the Ruby community.\r\n\r\nCandidates that are currently supported are:\r\n\r\n*   Groovy\r\n*   Grails\r\n*   Griffon\r\n*   Gradle\r\n*   vert.x\r\n\r\nThis list will grow beyond Groovy candidates.\r\n\r\nIt runs on the following platforms:\r\n\r\n*   Linux\r\n*   Mac OSX\r\n*   Cygwin\r\n*   Solaris\r\n*   FreeBSD (with bash installed)\r\n\r\nGVM is written in [bash](http://www.gnu.org/software/bash) and only depends on [curl](http://curl.haxx.se/) and [unzip](http://www.info-zip.org/) to be available on your system. The installer will check for these before completing the installation process. It will then create a `.gvm/` folder in your home directory, and neatly install all candidates beneath it.\r\ntes beneath it.\r\n\r\nGVM also has a server-side component written with [vertx](http://vertx.io) for dynamic behaviour. Further it uses [MongoDB](http://www.mongodb.org/) for keeping track of Candidates and persisting some usage statistics. Newly released candidate versions can be added to GVM without the need for local re-installation.\r\n\r\nIt also facilitates easy installation and a selfupdate feature to upgrade client-side components. It even sports a facility for live broadcast notifications.\r\n\r\n## Installation\r\n\r\nOpen your favourite bash terminal and enter the following:\r\n\r\n    curl -s get.gvmtool.net | bash\r\n\r\nIf the environment needs tweaking for GVM to be installed, the installer will prompt you accordingly and ask you to restart.\r\n\r\n## Usage\r\n\r\nAfter installation, you will need to run the code snippet that the installer prompts you to. Alternatively you could open a new terminal. Next, run the following:\r\n\r\n    gvm help\r\n\r\nIf GVM was installed correctly, you should see some basic help information:\r\n\r\n    Usage: gvm <command> <candidate> [version]\r\n    \r\n       command    :  install, uninstall, list, use, current, version, selfupdate, broadcast or help\r\n       candidate  :  groovy, grails, griffon, gradle, vert.x\r\n       version    :  optional, defaults to latest stable if not provided\r\n    \r\n    eg: gvm install groovy\r\n\r\nInstall the current default grails version by simply typing:\r\n\r\n    $ gvm install grails\r\n\r\nand after installation completes, install another version:\r\n\r\n    $ gvm install grails 1.3.9\r\n\r\nchoose to use one of these:\r\n\r\n    $ gvm use grails 2.1.1\r\n\r\nsee what is currently in use:\r\n\r\n    $gvm current grails\r\n\r\nthen get a listing of what is available, installed and selected:\r\n\r\n    $ gvm list grails\r\n\r\nand finally, remove the ones you aren't using anymore:\r\n\r\n    $ gvm uninstall grails 1.3.9\r\n\r\nYou can also view the latest broadcast message:\r\n\r\n    $gvm broadcast\r\n\r\nIf you are being warned of an outdated version:\r\n\r\n    $gvm selfupdate\r\n\r\nThat's all there is to it!\r\n\r\nEasy peasy pie!\r\n","name":"GVM","google":"UA-10247295-11"}